# ==============================================
# Marcel Expenses Project - Environment Variables
# ==============================================
# Copy this file to .env and update the values

# ==============================================
# DATABASE CONFIGURATION
# ==============================================
MONGO_ROOT_USER=admin
MONGO_ROOT_PASSWORD=RjUq3e6UrrWlD06nKj2NVLlbHv4FGIL6UyDEW58lR98=
MONGO_DATABASE=marcel_expenses

# ==============================================
# BACKEND CONFIGURATION
# ==============================================
# Server Configuration
PORT=5000
MONGO_URI=mongodb+srv://malekurt53:c2W5wfGYQovils7v@attend-wise.w8wfxrd.mongodb.net/attend-wise?retryWrites=true&w=majority&appName=attend-wise
BASE_URL=http://localhost:5000
FRONTEND_URL=http://localhost:5173

# JWT Configuration
JWT_SECRET=G99fR7/8TZ8p4ZYbXx2dCL1uiqR/G5F58Jdekbpjv1vJDdO7LzsfU6Xkbrc/P4i/3auX7AmKPZKSte5YR482RQ==
JWT_EXPIRE=30d
JWT_COOKIE_EXPIRE=30

# API Configuration
API_INTERNAL_TOKEN=ExpenseBudgetAPIToken2024
DEFAULT_COST_PER_KM=0.70

# Gemini AI API Configuration
GEMINI_API_KEY=AIzaSyDlrivpcgCn6qJUXHd4iefL4ePLZgmZMyc

# Google Maps API (Optional)
GOOGLE_MAPS_API_KEY=AIzaSyBmSjzDusBg-elrYYeZ8ODJ69slrZt-ljw

# Email Configuration (Optional)
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USERNAME=masynctech@gmail.com
EMAIL_PASSWORD=vilu xxme xxer bayg
FROM_NAME=Expense App
FROM_EMAIL=noreply@expenseapp.com

# ==============================================
# FRONTEND CONFIGURATION
# ==============================================
VITE_API_URL=http://localhost:5000/api
VITE_GOOGLE_MAPS_API_KEY=AIzaSyBmSjzDusBg-elrYYeZ8ODJ69slrZt-ljw

# ==============================================
# PRODUCTION DEPLOYMENT (Optional)
# ==============================================
# Domain Configuration
DOMAIN=your-domain.com
SSL_EMAIL=your-email@domain.com

# ==============================================
# SECURITY NOTES
# ==============================================
# 1. Never commit this file with real values to version control
# 2. Use strong passwords (minimum 16 characters)
# 3. Generate JWT_SECRET with: openssl rand -base64 64
# 4. For production, use environment-specific values
# 5. Consider using Docker secrets for sensitive data

# ==============================================
# QUICK SETUP COMMANDS
# ==============================================
# Generate JWT Secret:
# openssl rand -base64 64
#
# Generate MongoDB Password:
# openssl rand -base64 32
#
# Test Database Connection:
# docker-compose exec mongodb mongosh -u admin -p password
